/*声明构建的项目类型*/
apply plugin: 'com.android.application'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    /*高德地图*/
    compile files('libs/Android_2DMapApi_V2.5.0.jar')
    compile files('libs/MapApiServices.jar')
    compile files('libs/MapApiLocation_1.3.3.jar')
    /*高德地图*/

    /*talkingdata*/
    compile files('libs/TalkingDataAnalytics_V2.0.4.jar')
    /*talkingdata*/

    /*友盟分享*/
    compile files('libs/umeng_social_sdk.jar')
    compile files('libs/httpmime-4.1.3.jar')
    compile files('libs/SocialSDK_AtFriends.jar')
    compile files('libs/SocialSDK_email.jar')
    compile files('libs/SocialSDK_Sina.jar')
    compile files('libs/SocialSDK_sms.jar')
    compile files('libs/SocialSDK_WeiXin_1.jar')
    compile files('libs/SocialSDK_WeiXin_2.jar')
    /*友盟分享*/

    /*友盟统计*/
    compile 'com.umeng.analytics:analytics:latest.integration'
    /*  compile files('libs/umeng-analytics-v5.6.1.jar')*/
    /*友盟统计*/

    /*环信即时通讯*/
    compile files('libs/easemobchat_2.2.2.jar')
    /*环信即时通讯*/
    compile 'com.makeramen:roundedimageview:2.2.1'
    compile 'com.loopj.android:android-async-http:1.4.8'
    compile('com.afollestad.material-dialogs:commons:0.8.4.2@aar') {
        transitive = true
    }
    compile 'com.android.support:support-v4:23.+'
    compile 'com.android.support:appcompat-v7:23.+'
    compile 'com.android.support:recyclerview-v7:23.+'
    compile 'com.android.support:cardview-v7:23.+'
    compile 'com.android.support:multidex:1.+'
    /*compile 'org.apache.httpcomponents:httpcore:4.3.2'*/
    compile 'com.github.nirhart:parallaxscroll:1.0'
    // Use the following if your project uses ActionBarCompat

    /*compile 'com.github.manuelpeinado.fadingactionbar:fadingactionbar-abc:3.1.2'*/

    /*photoview查看图片*/
    compile 'com.github.chrisbanes.photoview:library:1.2.4'
    /*photoview查看图片*/
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'
    /*compile 'org.apache.httpcomponents:httpmime:4.5'*/
    compile 'com.alibaba:fastjson:1.2.7'
    compile 'com.qiniu:qiniu-android-sdk:7.0.7.2'
    compile 'com.nineoldandroids:library:2.4.0'
    /*compile 'com.daimajia.androidanimations:library:1.1.3'
        compile 'com.daimajia.easing:library:1.0.1'*/

    /*swipelayout*/
    compile 'com.daimajia.swipelayout:library:1.2.0'
    /*swipelayout*/
    compile files('libs/AndroidEasingFunctions-1.0.0.jar')
    compile files('libs/AndroidViewAnimations-1.1.3.jar')
    /*LeakCanary*/
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    /*LeakCanary*/

}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        // 应用的包名
        applicationId "bill.choosecity"
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 1
        versionName "1.0.0"
        // dex突破65535的限制
        multiDexEnabled true
        // 默认是umeng的渠道
        manifestPlaceholders = [CHANNEL_VALUE: "umeng"]
    }
    signingConfigs {
        release {

        }
    }
    dexOptions {
        preDexLibraries = false // this one doesn't matter
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        xmlReport false
        warningsAsErrors true
        quiet false
        showAll true
        /*在打包Release版本的时候进行检测*/
        checkReleaseBuilds false
        /*有报错也不会停止打包*/
        abortOnError false
    }
    sourceSets {
        main {
            /*     manifest.srcFile 'AndroidManifest.xml'
                 java.srcDirs = ['src']
                 resources.srcDirs = ['src']
                 aidl.srcDirs = ['src']
                 renderscript.srcDirs = ['src']
                 res.srcDirs = ['res']
                 assets.srcDirs = ['assets']*/
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = ['jni']
        }
    }

    /*  sourceSets.main {
          jniLibs.srcDir 'src/main/libs' //set .so files location to libs
          jni.srcDirs = [] //disable automatic ndk-build call
      }*/
    /* sourceSets {
         main {
             manifest.srcFile 'AndroidManifest.xml'
             java.srcDirs = ['src']
             resources.srcDirs = ['src']
             aidl.srcDirs = ['src']
             renderscript.srcDirs = ['src']
             res.srcDirs = ['res']
             assets.srcDirs = ['assets']
             jniLibs.srcDirs = ['libs']
             *//*jni.srcDirs = ['jni']*//*
         }

         // Move the tests to tests/java, tests/res, etc...
         instrumentTest.setRoot('tests')

         // Move the build types to build-types/<type>
         // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
         // This moves them out of them default location under src/<type>/... which would
         // conflict with src/ being used by the main source set.
         // Adding new build types or product flavors should be accompanied
         // by a similar customization.
         debug.setRoot('build-types/debug')
         release.setRoot('build-types/release')
     }*/

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    buildTypes {
        debug {
            // debug模式
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"

            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            /*是否混淆*/
            minifyEnabled true
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为halobear_v1.0_2015-01-15_wandoujia.apk
                        def fileName = "halobear_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }
    productFlavors {
        umeng {}
        //xiaomi {}
        /*  wandoujia {}*/
        /* ./gradlew build*/
        /*幻熊结婚圈*/

        /*
        oppo {}
        xiaomi {}
         c360 {}
         qq {}
         wandoujia {}
         taobao {}
         anzhi {}
         huawei {}*/

        /*     baidu {}
             baidu91 {}
             baiduhiapk {}

               lenovo {}

               meizu {}
               wangyi {}
               appChina {}
               eoe {}
               gfan {}
               jinli {}
               nduo {}
               c3g {}
               mumayi {}*/
        /*
         c10086 {}
         pp {}
         jinli {}
         sougou {}
         uc {}*/
        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
        }

        /*    standard {
            }
            withLeakCanary {
                minSdkVersion 11
                targetSdkVersion 23
            }*/
    }
}
